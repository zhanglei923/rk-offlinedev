{
    webProjectPath: '',//你的web工程的路径，如果为空，则默认找平级目录下的web工程
    webProjectPathOfDeploy: '',//打包状态的web工程路径，可以从144下载到tar包
    
    staticProjectPath: '',//【不开放】
    deployWebProjectPath:'',//从144下载的deploy包【不开放】
    http:{
        port: 666 //可以改变http的端口号
    },
    https:{
        port: 443 //可以改变http的端口号
    },
    es6:{
        autoTransformJs: false //自动将es6以上的语法，降级为普通js
    },
    httpConfig:{
        http2: false,//是否开启http2协议
        gzip: true,//是否开启gzip，但稍微消耗cpu
    },
    debug:{
        //三种模式：
        //  mode="raw"，纯原生态的源代码
        //  mode="source"，源代码模式，可以对i18n和tpl，css等做少量聚合优化
        //  mode="concat"，自动合并模式，实际是启用了seajs的线上模式，所有cmd格式的js文件，也会被切换到线上状态
        mode: 'source',
        source:{
            concatStaticTplRequests: true,//自动聚合tpl静态资源请求
            concatStaticCssRequests: true,//自动聚合css静态资源请求
        },
        concat:{
            concatStaticTplRequests: true,//自动聚合tpl静态资源请求
            concatStaticJsRequests: true,//自动聚合js静态资源请求
            concatStaticCssRequests: true,//自动聚合css静态资源请求
            backupConcatFiles: false,
            maxConcatFileSizeMB: 6,
            filesToExclude:[//不期望被合并的文件路径，用seajs的pathid，支持通配符，以下是一些示例：
                        //'platform/**', //<--不期望聚合platform目录的所有文件
                        //'oa/**/*.js', //<--不期望聚合oa目录下的所有js文件
                        //'products/bi/**/*.css' //<--不期望聚合products/bi目录的所有css文件
            ]
        },
        autoCacheStatic: true,//自动缓存静态资源，建议开启。一级缓存由fs_readFile支持，主要缓存文件层，节省io
        autoCacheStaticLevel2: true,//自动缓存处理过的js文本，内存富余的话建议开启。二级缓存由static-proxy支持，主要缓存处理过的代码文本，节省cpu计算    
        detect404RequireUrls: false  //自动侦测404require，这个比较消耗cpu，慎用
    },
    breeze:{

    },
    runtime:{//这里定义一些运行时的状态，约定于jsp里的SESSION变量
        seajsConfig: {//这里是sea-config.js里的同名配置
                vars: {
                    'locale':'zh-cn',
                    'languageCode': 'zh',
                }
            }
    }
}